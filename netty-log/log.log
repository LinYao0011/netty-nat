2020-08-03 16:43:30  [ main:0 ] - [ DEBUG ]  Using SLF4J as the default logging framework
2020-08-03 16:43:30  [ main:4 ] - [ DEBUG ]  -Dio.netty.eventLoopThreads: 16
2020-08-03 16:43:30  [ main:45 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-08-03 16:43:30  [ main:46 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-08-03 16:43:30  [ main:55 ] - [ DEBUG ]  -Dio.netty.noKeySetOptimization: false
2020-08-03 16:43:30  [ main:56 ] - [ DEBUG ]  -Dio.netty.selectorAutoRebuildThreshold: 512
2020-08-03 16:43:30  [ main:70 ] - [ DEBUG ]  Platform: Windows
2020-08-03 16:43:30  [ main:72 ] - [ DEBUG ]  -Dio.netty.noUnsafe: false
2020-08-03 16:43:30  [ main:72 ] - [ DEBUG ]  Java version: 8
2020-08-03 16:43:30  [ main:74 ] - [ DEBUG ]  sun.misc.Unsafe.theUnsafe: available
2020-08-03 16:43:30  [ main:75 ] - [ DEBUG ]  sun.misc.Unsafe.copyMemory: available
2020-08-03 16:43:30  [ main:75 ] - [ DEBUG ]  java.nio.Buffer.address: available
2020-08-03 16:43:30  [ main:76 ] - [ DEBUG ]  direct buffer constructor: available
2020-08-03 16:43:30  [ main:77 ] - [ DEBUG ]  java.nio.Bits.unaligned: available, true
2020-08-03 16:43:30  [ main:77 ] - [ DEBUG ]  jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-08-03 16:43:30  [ main:81 ] - [ DEBUG ]  java.nio.DirectByteBuffer.<init>(long, int): available
2020-08-03 16:43:30  [ main:83 ] - [ DEBUG ]  sun.misc.Unsafe: available
2020-08-03 16:43:30  [ main:83 ] - [ DEBUG ]  -Dio.netty.tmpdir: C:\Users\admin\AppData\Local\Temp (java.io.tmpdir)
2020-08-03 16:43:30  [ main:84 ] - [ DEBUG ]  -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-08-03 16:43:30  [ main:86 ] - [ DEBUG ]  -Dio.netty.maxDirectMemory: 3797417984 bytes
2020-08-03 16:43:30  [ main:86 ] - [ DEBUG ]  -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-08-03 16:43:30  [ main:87 ] - [ DEBUG ]  java.nio.ByteBuffer.cleaner(): available
2020-08-03 16:43:30  [ main:88 ] - [ DEBUG ]  -Dio.netty.noPreferDirect: false
2020-08-03 16:43:30  [ main:97 ] - [ DEBUG ]  org.jctools-core.MpscChunkedArrayQueue: available
2020-08-03 16:43:30  [ main:389 ] - [ DEBUG ]  -Dio.netty.processId: 4200 (auto-detected)
2020-08-03 16:43:30  [ main:392 ] - [ DEBUG ]  -Djava.net.preferIPv4Stack: false
2020-08-03 16:43:30  [ main:392 ] - [ DEBUG ]  -Djava.net.preferIPv6Addresses: false
2020-08-03 16:43:30  [ main:572 ] - [ DEBUG ]  Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-08-03 16:43:30  [ main:573 ] - [ DEBUG ]  Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-08-03 16:43:30  [ main:794 ] - [ DEBUG ]  -Dio.netty.machineId: e4:aa:ea:ff:fe:4d:cd:97 (auto-detected)
2020-08-03 16:43:30  [ main:805 ] - [ DEBUG ]  -Dio.netty.leakDetection.level: simple
2020-08-03 16:43:30  [ main:806 ] - [ DEBUG ]  -Dio.netty.leakDetection.targetRecords: 4
2020-08-03 16:43:30  [ main:829 ] - [ DEBUG ]  -Dio.netty.allocator.numHeapArenas: 16
2020-08-03 16:43:30  [ main:829 ] - [ DEBUG ]  -Dio.netty.allocator.numDirectArenas: 16
2020-08-03 16:43:30  [ main:829 ] - [ DEBUG ]  -Dio.netty.allocator.pageSize: 8192
2020-08-03 16:43:30  [ main:830 ] - [ DEBUG ]  -Dio.netty.allocator.maxOrder: 11
2020-08-03 16:43:30  [ main:830 ] - [ DEBUG ]  -Dio.netty.allocator.chunkSize: 16777216
2020-08-03 16:43:30  [ main:830 ] - [ DEBUG ]  -Dio.netty.allocator.tinyCacheSize: 512
2020-08-03 16:43:30  [ main:830 ] - [ DEBUG ]  -Dio.netty.allocator.smallCacheSize: 256
2020-08-03 16:43:30  [ main:831 ] - [ DEBUG ]  -Dio.netty.allocator.normalCacheSize: 64
2020-08-03 16:43:30  [ main:831 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-08-03 16:43:30  [ main:831 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimInterval: 8192
2020-08-03 16:43:30  [ main:832 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-08-03 16:43:30  [ main:832 ] - [ DEBUG ]  -Dio.netty.allocator.useCacheForAllThreads: true
2020-08-03 16:43:30  [ main:832 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-08-03 16:43:30  [ main:841 ] - [ DEBUG ]  -Dio.netty.allocator.type: pooled
2020-08-03 16:43:30  [ main:841 ] - [ DEBUG ]  -Dio.netty.threadLocalDirectBufferSize: 0
2020-08-03 16:43:30  [ main:841 ] - [ DEBUG ]  -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-08-03 16:43:30  [ main:854 ] - [ INFO ]  SysServer start listen on port 8080......
2020-08-03 16:44:14  [ main:0 ] - [ DEBUG ]  Using SLF4J as the default logging framework
2020-08-03 16:44:14  [ main:35 ] - [ DEBUG ]  -Dio.netty.leakDetection.level: simple
2020-08-03 16:44:14  [ main:35 ] - [ DEBUG ]  -Dio.netty.leakDetection.targetRecords: 4
2020-08-03 16:44:14  [ main:42 ] - [ DEBUG ]  Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@71318ec4
2020-08-03 16:44:14  [ main:63 ] - [ DEBUG ]  Platform: Windows
2020-08-03 16:44:14  [ main:66 ] - [ DEBUG ]  -Dio.netty.noUnsafe: false
2020-08-03 16:44:14  [ main:67 ] - [ DEBUG ]  Java version: 8
2020-08-03 16:44:14  [ main:69 ] - [ DEBUG ]  sun.misc.Unsafe.theUnsafe: available
2020-08-03 16:44:14  [ main:70 ] - [ DEBUG ]  sun.misc.Unsafe.copyMemory: available
2020-08-03 16:44:14  [ main:70 ] - [ DEBUG ]  java.nio.Buffer.address: available
2020-08-03 16:44:14  [ main:71 ] - [ DEBUG ]  direct buffer constructor: available
2020-08-03 16:44:14  [ main:72 ] - [ DEBUG ]  java.nio.Bits.unaligned: available, true
2020-08-03 16:44:14  [ main:72 ] - [ DEBUG ]  jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-08-03 16:44:14  [ main:73 ] - [ DEBUG ]  java.nio.DirectByteBuffer.<init>(long, int): available
2020-08-03 16:44:14  [ main:73 ] - [ DEBUG ]  sun.misc.Unsafe: available
2020-08-03 16:44:14  [ main:73 ] - [ DEBUG ]  -Dio.netty.tmpdir: C:\Users\admin\AppData\Local\Temp (java.io.tmpdir)
2020-08-03 16:44:14  [ main:75 ] - [ DEBUG ]  -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-08-03 16:44:14  [ main:77 ] - [ DEBUG ]  -Dio.netty.maxDirectMemory: 3797417984 bytes
2020-08-03 16:44:14  [ main:77 ] - [ DEBUG ]  -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-08-03 16:44:14  [ main:80 ] - [ DEBUG ]  java.nio.ByteBuffer.cleaner(): available
2020-08-03 16:44:14  [ main:82 ] - [ DEBUG ]  -Dio.netty.noPreferDirect: false
2020-08-03 16:44:14  [ main:94 ] - [ DEBUG ]  org.jctools-core.MpscChunkedArrayQueue: available
2020-08-03 16:44:14  [ main:582 ] - [ DEBUG ]  -Dio.netty.eventLoopThreads: 16
2020-08-03 16:44:14  [ main:623 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-08-03 16:44:14  [ main:624 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-08-03 16:44:14  [ main:638 ] - [ DEBUG ]  -Dio.netty.noKeySetOptimization: false
2020-08-03 16:44:14  [ main:641 ] - [ DEBUG ]  -Dio.netty.selectorAutoRebuildThreshold: 512
2020-08-03 16:44:14  [ main:940 ] - [ DEBUG ]  -Dio.netty.processId: 17152 (auto-detected)
2020-08-03 16:44:14  [ main:943 ] - [ DEBUG ]  -Djava.net.preferIPv4Stack: false
2020-08-03 16:44:14  [ main:943 ] - [ DEBUG ]  -Djava.net.preferIPv6Addresses: false
2020-08-03 16:44:15  [ main:1117 ] - [ DEBUG ]  Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-08-03 16:44:15  [ main:1118 ] - [ DEBUG ]  Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-08-03 16:44:15  [ main:1292 ] - [ DEBUG ]  -Dio.netty.machineId: e4:aa:ea:ff:fe:4d:cd:97 (auto-detected)
2020-08-03 16:44:15  [ main:1335 ] - [ DEBUG ]  -Dio.netty.allocator.numHeapArenas: 16
2020-08-03 16:44:15  [ main:1336 ] - [ DEBUG ]  -Dio.netty.allocator.numDirectArenas: 16
2020-08-03 16:44:15  [ main:1336 ] - [ DEBUG ]  -Dio.netty.allocator.pageSize: 8192
2020-08-03 16:44:15  [ main:1337 ] - [ DEBUG ]  -Dio.netty.allocator.maxOrder: 11
2020-08-03 16:44:15  [ main:1337 ] - [ DEBUG ]  -Dio.netty.allocator.chunkSize: 16777216
2020-08-03 16:44:15  [ main:1337 ] - [ DEBUG ]  -Dio.netty.allocator.tinyCacheSize: 512
2020-08-03 16:44:15  [ main:1337 ] - [ DEBUG ]  -Dio.netty.allocator.smallCacheSize: 256
2020-08-03 16:44:15  [ main:1338 ] - [ DEBUG ]  -Dio.netty.allocator.normalCacheSize: 64
2020-08-03 16:44:15  [ main:1338 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-08-03 16:44:15  [ main:1338 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimInterval: 8192
2020-08-03 16:44:15  [ main:1338 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-08-03 16:44:15  [ main:1339 ] - [ DEBUG ]  -Dio.netty.allocator.useCacheForAllThreads: true
2020-08-03 16:44:15  [ main:1339 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-08-03 16:44:15  [ main:1352 ] - [ DEBUG ]  -Dio.netty.allocator.type: pooled
2020-08-03 16:44:15  [ main:1352 ] - [ DEBUG ]  -Dio.netty.threadLocalDirectBufferSize: 0
2020-08-03 16:44:15  [ main:1353 ] - [ DEBUG ]  -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1380 ] - [ INFO ]  服务端链接成功...
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1392 ] - [ INFO ]  当前链路已经激活了，重连尝试次数重新置为0
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1411 ] - [ DEBUG ]  -Dio.netty.buffer.checkAccessible: true
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1411 ] - [ DEBUG ]  -Dio.netty.buffer.checkBounds: true
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1411 ] - [ DEBUG ]  Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@a240158
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1419 ] - [ INFO ]  AA00000173B37E24BE01000A0870617373776F7264B7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1424 ] - [ DEBUG ]  -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1424 ] - [ DEBUG ]  -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1424 ] - [ DEBUG ]  -Dio.netty.recycler.linkCapacity: 16
2020-08-03 16:44:15  [ nioEventLoopGroup-2-1:1425 ] - [ DEBUG ]  -Dio.netty.recycler.ratio: 8
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45411 ] - [ DEBUG ]  -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45411 ] - [ DEBUG ]  -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45411 ] - [ DEBUG ]  -Dio.netty.recycler.linkCapacity: 16
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45411 ] - [ DEBUG ]  -Dio.netty.recycler.ratio: 8
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45419 ] - [ DEBUG ]  -Dio.netty.buffer.checkAccessible: true
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45419 ] - [ DEBUG ]  -Dio.netty.buffer.checkBounds: true
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45420 ] - [ DEBUG ]  Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6dc1f83b
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45440 ] - [ INFO ]  启动代理服务（ProxyServer）成功
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45441 ] - [ INFO ]  启动代理服务（InternalServer）成功
2020-08-03 16:44:15  [ nioEventLoopGroup-3-1:45447 ] - [ INFO ]  成功发送连接池命令
2020-08-03 16:44:15  [ Thread-5:45453 ] - [ INFO ]  InternalServer start internal-server on port 8082......
2020-08-03 16:45:05  [ nioEventLoopGroup-2-1:51572 ] - [ INFO ]  启动代理服务
2020-08-03 16:45:05  [ nioEventLoopGroup-3-1:51654 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-5-1:97547 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:07  [ nioEventLoopGroup-4-1:53602 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-3-1:53613 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-5-1:97588 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:07  [ nioEventLoopGroup-4-1:53620 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-3-1:53632 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-5-1:97608 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:07  [ nioEventLoopGroup-4-1:53640 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-3-1:53657 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-5-1:97633 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:07  [ nioEventLoopGroup-4-1:53665 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-3-1:53678 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-5-1:97653 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:07  [ nioEventLoopGroup-3-1:53680 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:07  [ nioEventLoopGroup-5-1:97654 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-4-1:57022 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57034 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101009 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-4-1:57040 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-2-1:57081 ] - [ INFO ]  启动代理服务
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57096 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101071 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-4-1:57099 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-2:57111 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57120 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101094 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57120 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101095 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57121 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101095 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101096 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57132 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57133 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101107 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101108 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-4-1:57137 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57189 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101163 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57189 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101164 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57190 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101165 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57191 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57191 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101166 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101166 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57202 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57203 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57204 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101178 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57204 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101179 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101179 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101180 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57213 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57214 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101188 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101189 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57215 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101190 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57216 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101190 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57217 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101191 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101191 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57218 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101192 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57225 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101200 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57227 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57228 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101202 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101203 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101204 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57230 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57231 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57231 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101206 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101207 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57240 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101215 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57242 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57242 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101217 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57243 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101218 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57244 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101218 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57244 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101219 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101219 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57247 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101221 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57247 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101222 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57253 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57253 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101227 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101228 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57256 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57256 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101230 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101231 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57258 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101232 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57259 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101233 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101234 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57262 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57262 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57262 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101236 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57263 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101237 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57263 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101237 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101238 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101238 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57265 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101239 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57265 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101239 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57266 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101240 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101241 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57268 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101243 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57269 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101243 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57270 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57270 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101244 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101244 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57271 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101246 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57273 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101247 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57273 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101247 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57273 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101248 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101248 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57275 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101250 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57276 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101250 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57277 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101252 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57278 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101253 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57280 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57281 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101255 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101255 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57281 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101255 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57282 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57282 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101256 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57282 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101256 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101257 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57283 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101257 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57283 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101258 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57284 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101258 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57284 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101259 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57285 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101259 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57285 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101259 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101261 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101262 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57287 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57288 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101262 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57289 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101263 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57289 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101263 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57289 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101263 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57290 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101264 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57290 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101264 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57290 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101265 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57292 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101267 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101267 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57293 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57294 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101268 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:11  [ nioEventLoopGroup-4-1:57398 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-4-1:57398 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-3-1:57418 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:11  [ nioEventLoopGroup-5-1:101393 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103056 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:59087 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-2:59095 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103071 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:59101 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-2:59109 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103084 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:59113 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-2:59123 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103098 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:59127 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-2:59142 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-2:59144 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103118 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-2:59145 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103119 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103120 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-2:59147 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-2:103122 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-4-1:59161 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59180 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103155 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-4-1:59182 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59203 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103178 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59204 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103178 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103178 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59204 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103179 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59205 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103179 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59216 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103190 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59217 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103191 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103192 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59219 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103194 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59229 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103204 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59231 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59231 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103205 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59231 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103206 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103206 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-3-1:59242 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103217 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:45:13  [ nioEventLoopGroup-5-1:103218 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:46:02  [ Thread-4:152229 ] - [ INFO ]  执行 addShutdownHook...
2020-08-03 16:46:02  [ Thread-2:152229 ] - [ INFO ]  执行 addShutdownHook...
2020-08-03 16:46:02  [ Thread-1:152229 ] - [ INFO ]  执行 addShutdownHook...
2020-08-03 16:46:02  [ nioEventLoopGroup-3-1:152635 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-9:152639 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-10:152639 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-4:152638 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-5:152638 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-7:152638 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-12:152637 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-16:152637 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-13:152637 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-14:152637 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-15:152637 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-11:152637 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-6:152636 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-1:152636 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-8:152636 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-3:152636 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-2:152635 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-1:152657 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-5-1:152657 ] - [ ERROR ]  channel匹配异常!!!
2020-08-03 16:46:02  [ nioEventLoopGroup-7-3:152657 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-8:152657 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-6:152655 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-11:152653 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-15:152652 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-14:152651 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-13:152650 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-16:152649 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-12:152649 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-7:152648 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-5:152646 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-4:152645 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-10:152644 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-9:152642 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-4:152669 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-3:152661 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-5-1:152660 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.Exception: channel匹配异常!!!
	at server.group.ServerChannelGroup.getInternalByProxy(ServerChannelGroup.java:219)
	at server.handler.ProxyServerHandler.channelInactive(ProxyServerHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-1:152660 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-2:152659 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-5-2:152659 ] - [ ERROR ]  channel匹配异常!!!
2020-08-03 16:46:02  [ nioEventLoopGroup-7-3:152672 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-4:152672 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-7-2:152675 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:02  [ nioEventLoopGroup-5-2:152675 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.Exception: channel匹配异常!!!
	at server.group.ServerChannelGroup.getInternalByProxy(ServerChannelGroup.java:219)
	at server.handler.ProxyServerHandler.channelInactive(ProxyServerHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:46:04  [ nioEventLoopGroup-3-1:154652 ] - [ DEBUG ]  Freed 7 thread-local buffer(s) from thread: nioEventLoopGroup-3-1
2020-08-03 16:46:04  [ nioEventLoopGroup-7-5:154752 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-5
2020-08-03 16:46:04  [ nioEventLoopGroup-7-6:154753 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-6
2020-08-03 16:46:04  [ nioEventLoopGroup-7-7:154752 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-7
2020-08-03 16:46:04  [ nioEventLoopGroup-7-1:154758 ] - [ DEBUG ]  Freed 17 thread-local buffer(s) from thread: nioEventLoopGroup-7-1
2020-08-03 16:46:04  [ nioEventLoopGroup-7-10:154758 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-10
2020-08-03 16:46:04  [ nioEventLoopGroup-7-15:154758 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-15
2020-08-03 16:46:04  [ nioEventLoopGroup-7-12:154758 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-12
2020-08-03 16:46:04  [ nioEventLoopGroup-5-1:154758 ] - [ DEBUG ]  Freed 15 thread-local buffer(s) from thread: nioEventLoopGroup-5-1
2020-08-03 16:46:04  [ nioEventLoopGroup-7-8:154758 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-8
2020-08-03 16:46:04  [ nioEventLoopGroup-7-16:154757 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-16
2020-08-03 16:46:04  [ nioEventLoopGroup-7-13:154757 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-13
2020-08-03 16:46:04  [ nioEventLoopGroup-7-14:154757 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-14
2020-08-03 16:46:04  [ nioEventLoopGroup-5-2:154757 ] - [ DEBUG ]  Freed 8 thread-local buffer(s) from thread: nioEventLoopGroup-5-2
2020-08-03 16:46:04  [ nioEventLoopGroup-7-11:154756 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-11
2020-08-03 16:46:04  [ nioEventLoopGroup-7-9:154756 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-9
2020-08-03 16:46:04  [ nioEventLoopGroup-7-2:154755 ] - [ DEBUG ]  Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-7-2
2020-08-03 16:46:04  [ nioEventLoopGroup-7-3:154755 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-3
2020-08-03 16:46:04  [ nioEventLoopGroup-7-4:154753 ] - [ DEBUG ]  Freed 1 thread-local buffer(s) from thread: nioEventLoopGroup-7-4
2020-08-03 16:46:04  [ Thread-4:154784 ] - [ INFO ]  Server has been shutdown gracefully!
2020-08-03 16:46:06  [ Thread-2:156283 ] - [ INFO ]  Server has been shutdown gracefully!
2020-08-03 16:46:06  [ Thread-1:156283 ] - [ INFO ]  Server has been shutdown gracefully!
2020-08-03 16:46:17  [ main:0 ] - [ DEBUG ]  Using SLF4J as the default logging framework
2020-08-03 16:46:17  [ main:4 ] - [ DEBUG ]  -Dio.netty.eventLoopThreads: 16
2020-08-03 16:46:17  [ main:45 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-08-03 16:46:17  [ main:45 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-08-03 16:46:17  [ main:55 ] - [ DEBUG ]  -Dio.netty.noKeySetOptimization: false
2020-08-03 16:46:17  [ main:55 ] - [ DEBUG ]  -Dio.netty.selectorAutoRebuildThreshold: 512
2020-08-03 16:46:17  [ main:69 ] - [ DEBUG ]  Platform: Windows
2020-08-03 16:46:17  [ main:70 ] - [ DEBUG ]  -Dio.netty.noUnsafe: false
2020-08-03 16:46:17  [ main:71 ] - [ DEBUG ]  Java version: 8
2020-08-03 16:46:17  [ main:72 ] - [ DEBUG ]  sun.misc.Unsafe.theUnsafe: available
2020-08-03 16:46:17  [ main:72 ] - [ DEBUG ]  sun.misc.Unsafe.copyMemory: available
2020-08-03 16:46:17  [ main:73 ] - [ DEBUG ]  java.nio.Buffer.address: available
2020-08-03 16:46:17  [ main:74 ] - [ DEBUG ]  direct buffer constructor: available
2020-08-03 16:46:17  [ main:75 ] - [ DEBUG ]  java.nio.Bits.unaligned: available, true
2020-08-03 16:46:17  [ main:75 ] - [ DEBUG ]  jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-08-03 16:46:17  [ main:79 ] - [ DEBUG ]  java.nio.DirectByteBuffer.<init>(long, int): available
2020-08-03 16:46:17  [ main:80 ] - [ DEBUG ]  sun.misc.Unsafe: available
2020-08-03 16:46:17  [ main:80 ] - [ DEBUG ]  -Dio.netty.tmpdir: C:\Users\admin\AppData\Local\Temp (java.io.tmpdir)
2020-08-03 16:46:17  [ main:81 ] - [ DEBUG ]  -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-08-03 16:46:17  [ main:82 ] - [ DEBUG ]  -Dio.netty.maxDirectMemory: 3797417984 bytes
2020-08-03 16:46:17  [ main:82 ] - [ DEBUG ]  -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-08-03 16:46:17  [ main:83 ] - [ DEBUG ]  java.nio.ByteBuffer.cleaner(): available
2020-08-03 16:46:17  [ main:83 ] - [ DEBUG ]  -Dio.netty.noPreferDirect: false
2020-08-03 16:46:17  [ main:91 ] - [ DEBUG ]  org.jctools-core.MpscChunkedArrayQueue: available
2020-08-03 16:46:17  [ main:377 ] - [ DEBUG ]  -Dio.netty.processId: 10744 (auto-detected)
2020-08-03 16:46:17  [ main:380 ] - [ DEBUG ]  -Djava.net.preferIPv4Stack: false
2020-08-03 16:46:17  [ main:380 ] - [ DEBUG ]  -Djava.net.preferIPv6Addresses: false
2020-08-03 16:46:17  [ main:561 ] - [ DEBUG ]  Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-08-03 16:46:17  [ main:562 ] - [ DEBUG ]  Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-08-03 16:46:17  [ main:758 ] - [ DEBUG ]  -Dio.netty.machineId: e4:aa:ea:ff:fe:4d:cd:97 (auto-detected)
2020-08-03 16:46:17  [ main:768 ] - [ DEBUG ]  -Dio.netty.leakDetection.level: simple
2020-08-03 16:46:17  [ main:768 ] - [ DEBUG ]  -Dio.netty.leakDetection.targetRecords: 4
2020-08-03 16:46:17  [ main:792 ] - [ DEBUG ]  -Dio.netty.allocator.numHeapArenas: 16
2020-08-03 16:46:17  [ main:792 ] - [ DEBUG ]  -Dio.netty.allocator.numDirectArenas: 16
2020-08-03 16:46:17  [ main:793 ] - [ DEBUG ]  -Dio.netty.allocator.pageSize: 8192
2020-08-03 16:46:17  [ main:793 ] - [ DEBUG ]  -Dio.netty.allocator.maxOrder: 11
2020-08-03 16:46:17  [ main:793 ] - [ DEBUG ]  -Dio.netty.allocator.chunkSize: 16777216
2020-08-03 16:46:17  [ main:793 ] - [ DEBUG ]  -Dio.netty.allocator.tinyCacheSize: 512
2020-08-03 16:46:17  [ main:793 ] - [ DEBUG ]  -Dio.netty.allocator.smallCacheSize: 256
2020-08-03 16:46:17  [ main:794 ] - [ DEBUG ]  -Dio.netty.allocator.normalCacheSize: 64
2020-08-03 16:46:17  [ main:794 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-08-03 16:46:17  [ main:794 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimInterval: 8192
2020-08-03 16:46:17  [ main:794 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-08-03 16:46:17  [ main:795 ] - [ DEBUG ]  -Dio.netty.allocator.useCacheForAllThreads: true
2020-08-03 16:46:17  [ main:795 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-08-03 16:46:17  [ main:802 ] - [ DEBUG ]  -Dio.netty.allocator.type: pooled
2020-08-03 16:46:17  [ main:803 ] - [ DEBUG ]  -Dio.netty.threadLocalDirectBufferSize: 0
2020-08-03 16:46:17  [ main:803 ] - [ DEBUG ]  -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-08-03 16:46:17  [ main:814 ] - [ INFO ]  SysServer start listen on port 8080......
2020-08-03 16:46:24  [ main:0 ] - [ DEBUG ]  Using SLF4J as the default logging framework
2020-08-03 16:46:24  [ main:34 ] - [ DEBUG ]  -Dio.netty.leakDetection.level: simple
2020-08-03 16:46:24  [ main:35 ] - [ DEBUG ]  -Dio.netty.leakDetection.targetRecords: 4
2020-08-03 16:46:24  [ main:43 ] - [ DEBUG ]  Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@71318ec4
2020-08-03 16:46:24  [ main:64 ] - [ DEBUG ]  Platform: Windows
2020-08-03 16:46:24  [ main:67 ] - [ DEBUG ]  -Dio.netty.noUnsafe: false
2020-08-03 16:46:24  [ main:68 ] - [ DEBUG ]  Java version: 8
2020-08-03 16:46:24  [ main:71 ] - [ DEBUG ]  sun.misc.Unsafe.theUnsafe: available
2020-08-03 16:46:24  [ main:72 ] - [ DEBUG ]  sun.misc.Unsafe.copyMemory: available
2020-08-03 16:46:24  [ main:72 ] - [ DEBUG ]  java.nio.Buffer.address: available
2020-08-03 16:46:24  [ main:73 ] - [ DEBUG ]  direct buffer constructor: available
2020-08-03 16:46:24  [ main:74 ] - [ DEBUG ]  java.nio.Bits.unaligned: available, true
2020-08-03 16:46:24  [ main:75 ] - [ DEBUG ]  jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-08-03 16:46:24  [ main:75 ] - [ DEBUG ]  java.nio.DirectByteBuffer.<init>(long, int): available
2020-08-03 16:46:24  [ main:75 ] - [ DEBUG ]  sun.misc.Unsafe: available
2020-08-03 16:46:24  [ main:76 ] - [ DEBUG ]  -Dio.netty.tmpdir: C:\Users\admin\AppData\Local\Temp (java.io.tmpdir)
2020-08-03 16:46:24  [ main:78 ] - [ DEBUG ]  -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-08-03 16:46:24  [ main:81 ] - [ DEBUG ]  -Dio.netty.maxDirectMemory: 3797417984 bytes
2020-08-03 16:46:24  [ main:81 ] - [ DEBUG ]  -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-08-03 16:46:24  [ main:83 ] - [ DEBUG ]  java.nio.ByteBuffer.cleaner(): available
2020-08-03 16:46:24  [ main:83 ] - [ DEBUG ]  -Dio.netty.noPreferDirect: false
2020-08-03 16:46:24  [ main:94 ] - [ DEBUG ]  org.jctools-core.MpscChunkedArrayQueue: available
2020-08-03 16:46:25  [ main:780 ] - [ DEBUG ]  -Dio.netty.eventLoopThreads: 16
2020-08-03 16:46:25  [ main:832 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-08-03 16:46:25  [ main:832 ] - [ DEBUG ]  -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-08-03 16:46:25  [ main:844 ] - [ DEBUG ]  -Dio.netty.noKeySetOptimization: false
2020-08-03 16:46:25  [ main:845 ] - [ DEBUG ]  -Dio.netty.selectorAutoRebuildThreshold: 512
2020-08-03 16:46:25  [ main:1149 ] - [ DEBUG ]  -Dio.netty.processId: 17232 (auto-detected)
2020-08-03 16:46:25  [ main:1152 ] - [ DEBUG ]  -Djava.net.preferIPv4Stack: false
2020-08-03 16:46:25  [ main:1152 ] - [ DEBUG ]  -Djava.net.preferIPv6Addresses: false
2020-08-03 16:46:25  [ main:1320 ] - [ DEBUG ]  Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-08-03 16:46:25  [ main:1320 ] - [ DEBUG ]  Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-08-03 16:46:25  [ main:1492 ] - [ DEBUG ]  -Dio.netty.machineId: e4:aa:ea:ff:fe:4d:cd:97 (auto-detected)
2020-08-03 16:46:25  [ main:1523 ] - [ DEBUG ]  -Dio.netty.allocator.numHeapArenas: 16
2020-08-03 16:46:25  [ main:1524 ] - [ DEBUG ]  -Dio.netty.allocator.numDirectArenas: 16
2020-08-03 16:46:25  [ main:1524 ] - [ DEBUG ]  -Dio.netty.allocator.pageSize: 8192
2020-08-03 16:46:25  [ main:1524 ] - [ DEBUG ]  -Dio.netty.allocator.maxOrder: 11
2020-08-03 16:46:25  [ main:1524 ] - [ DEBUG ]  -Dio.netty.allocator.chunkSize: 16777216
2020-08-03 16:46:25  [ main:1524 ] - [ DEBUG ]  -Dio.netty.allocator.tinyCacheSize: 512
2020-08-03 16:46:25  [ main:1525 ] - [ DEBUG ]  -Dio.netty.allocator.smallCacheSize: 256
2020-08-03 16:46:25  [ main:1525 ] - [ DEBUG ]  -Dio.netty.allocator.normalCacheSize: 64
2020-08-03 16:46:25  [ main:1525 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-08-03 16:46:25  [ main:1525 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimInterval: 8192
2020-08-03 16:46:25  [ main:1525 ] - [ DEBUG ]  -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-08-03 16:46:25  [ main:1526 ] - [ DEBUG ]  -Dio.netty.allocator.useCacheForAllThreads: true
2020-08-03 16:46:25  [ main:1526 ] - [ DEBUG ]  -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-08-03 16:46:25  [ main:1535 ] - [ DEBUG ]  -Dio.netty.allocator.type: pooled
2020-08-03 16:46:25  [ main:1535 ] - [ DEBUG ]  -Dio.netty.threadLocalDirectBufferSize: 0
2020-08-03 16:46:25  [ main:1535 ] - [ DEBUG ]  -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1560 ] - [ INFO ]  服务端链接成功...
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1567 ] - [ INFO ]  当前链路已经激活了，重连尝试次数重新置为0
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1580 ] - [ DEBUG ]  -Dio.netty.buffer.checkAccessible: true
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1581 ] - [ DEBUG ]  -Dio.netty.buffer.checkBounds: true
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1581 ] - [ DEBUG ]  Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@122684f1
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1591 ] - [ DEBUG ]  -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1591 ] - [ DEBUG ]  -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1592 ] - [ DEBUG ]  -Dio.netty.recycler.linkCapacity: 16
2020-08-03 16:46:26  [ nioEventLoopGroup-2-1:1592 ] - [ DEBUG ]  -Dio.netty.recycler.ratio: 8
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9040 ] - [ DEBUG ]  -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9040 ] - [ DEBUG ]  -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9041 ] - [ DEBUG ]  -Dio.netty.recycler.linkCapacity: 16
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9041 ] - [ DEBUG ]  -Dio.netty.recycler.ratio: 8
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9048 ] - [ DEBUG ]  -Dio.netty.buffer.checkAccessible: true
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9048 ] - [ DEBUG ]  -Dio.netty.buffer.checkBounds: true
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9049 ] - [ DEBUG ]  Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@91080ed
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9065 ] - [ INFO ]  启动代理服务（ProxyServer）成功
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9066 ] - [ INFO ]  启动代理服务（InternalServer）成功
2020-08-03 16:46:26  [ nioEventLoopGroup-3-1:9072 ] - [ INFO ]  成功发送连接池命令
2020-08-03 16:46:26  [ Thread-5:9078 ] - [ INFO ]  InternalServer start internal-server on port 8082......
2020-08-03 16:47:11  [ nioEventLoopGroup-2-1:47465 ] - [ INFO ]  启动代理服务
2020-08-03 16:47:12  [ nioEventLoopGroup-3-1:47556 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-5-1:56903 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:13  [ nioEventLoopGroup-4-1:49484 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-3-1:49492 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-5-1:56930 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:13  [ nioEventLoopGroup-4-1:49495 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-3-1:49506 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-5-1:56944 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:13  [ nioEventLoopGroup-4-1:49510 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-3-1:49519 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-5-1:56957 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:13  [ nioEventLoopGroup-4-1:49521 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-3-1:49530 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:13  [ nioEventLoopGroup-5-1:56968 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:13  [ nioEventLoopGroup-4-1:49533 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-2-1:49564 ] - [ INFO ]  启动代理服务
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49570 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57012 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-4-1:49581 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49596 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57033 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49596 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57034 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49597 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57035 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-2:49599 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-4-1:49603 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49629 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57066 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49630 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57067 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49630 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57068 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57074 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49636 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49638 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57075 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49639 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57076 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49639 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57077 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49640 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49641 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57078 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57079 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49646 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57083 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49647 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57084 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49647 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57085 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49648 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57085 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49649 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57086 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49659 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49659 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57096 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49659 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57097 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49660 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57097 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57098 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49662 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57100 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49665 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57103 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49670 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49671 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57108 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57109 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49672 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49672 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57109 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57110 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49678 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49678 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57116 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57116 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49680 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49681 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57118 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57118 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49691 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57129 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49694 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57131 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49694 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57131 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49697 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57134 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:14  [ nioEventLoopGroup-4-1:49752 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-4-1:49753 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-3-1:49772 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:14  [ nioEventLoopGroup-5-1:57209 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59002 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:51570 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-2:51578 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59017 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:51583 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-2:51591 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59030 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:51597 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-2:51605 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59042 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:51607 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-2:51614 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59052 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:51617 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-2:51626 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-2:51627 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59064 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-2:51627 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59065 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-2:59065 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-4-1:51636 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-1:51647 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:59085 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-4-1:51649 ] - [ INFO ]  向ProxyClient发送数据成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-1:51662 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:59100 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-1:51664 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:59101 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-1:51673 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:59110 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:16  [ nioEventLoopGroup-3-1:51676 ] - [ INFO ]  向internalServer发送消息成功：true
2020-08-03 16:47:16  [ nioEventLoopGroup-5-1:59114 ] - [ DEBUG ]  向代理服务Channel回复消息成功:true
2020-08-03 16:47:23  [ Thread-1:66961 ] - [ INFO ]  执行 addShutdownHook...
2020-08-03 16:47:23  [ Thread-2:66961 ] - [ INFO ]  执行 addShutdownHook...
2020-08-03 16:47:23  [ Thread-4:66961 ] - [ INFO ]  执行 addShutdownHook...
2020-08-03 16:47:24  [ nioEventLoopGroup-7-4:67468 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-11:67474 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-13:67472 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-16:67471 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-15:67471 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-12:67470 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-14:67470 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-10:67470 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-9:67470 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-7:67469 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-6:67469 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-3-1:67468 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-5:67468 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-3:67468 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-8:67468 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-2:67468 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-1:67468 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-8:67495 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-3:67493 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-5:67492 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-6:67489 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-7:67489 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-9:67487 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-10:67486 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-14:67485 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-12:67483 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-15:67482 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-16:67481 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-13:67479 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-11:67477 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-4:67476 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-3:67500 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-2:67499 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-1:67499 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-5-2:67499 ] - [ ERROR ]  channel匹配异常!!!
2020-08-03 16:47:24  [ nioEventLoopGroup-5-1:67499 ] - [ ERROR ]  channel匹配异常!!!
2020-08-03 16:47:24  [ nioEventLoopGroup-5-2:67511 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.Exception: channel匹配异常!!!
	at server.group.ServerChannelGroup.getInternalByProxy(ServerChannelGroup.java:219)
	at server.handler.ProxyServerHandler.channelInactive(ProxyServerHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-1:67511 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-2:67510 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-3:67509 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-4:67509 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-5-1:67511 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.Exception: channel匹配异常!!!
	at server.group.ServerChannelGroup.getInternalByProxy(ServerChannelGroup.java:219)
	at server.handler.ProxyServerHandler.channelInactive(ProxyServerHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-08-03 16:47:24  [ nioEventLoopGroup-7-4:67514 ] - [ WARN ]  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at io.netty.channel.group.DefaultChannelGroup.find(DefaultChannelGroup.java:108)
	at server.group.ServerChannelGroup.getProxyByInternal(ServerChannelGroup.java:202)
	at server.handler.InternalServerHandler.channelInactive(InternalServerHandler.java:72)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:818)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:497)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
